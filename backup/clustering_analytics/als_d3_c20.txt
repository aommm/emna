connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 1
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 2
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 3
lemma-12, half (n+n) = n
lemma-2, length (xs++ys) = (length ys+length xs)
lemma-3, length (xs++xs) = double (length xs)
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 5
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 6
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 7
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 8
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 9
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 10
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 11
lemma-9, rev (rev xs) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-28, rev (qrev xs []) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-0, double n = (n+n)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-45, (n = m) => (n`elem`insert2 m xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-28, rev (qrev xs []) = xs
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)
lemma-45, (n = m) => (n`elem`insert2 m xs)
lemma-5, length (rev (xs++ys)) = (length xs+length ys)
lemma-9, rev (rev xs) = xs

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 1
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 2
lemma-12, half (n+n) = n
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
4 number of lemmas

------------------------------------
Cluster 3
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 5
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 6
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 7
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 8
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 9
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 10
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 11
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-2, length (xs++ys) = (length ys+length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-3, length (xs++xs) = double (length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-0, double n = (n+n)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 1
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 2
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 3
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 5
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 6
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 7
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 8
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 9
lemma-0, double n = (n+n)
lemma-12, half (n+n) = n
lemma-13, sorted (isort xs)
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)
lemma-49, count n (isort xs) = count n xs
lemma-9, rev (rev xs) = xs

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 10
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 11
lemma-28, rev (qrev xs []) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-45, (n = m) => (n`elem`insert2 m xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-2, length (xs++ys) = (length ys+length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-3, length (xs++xs) = double (length xs)

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 1
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 2
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 3
lemma-12, half (n+n) = n
lemma-13, sorted (isort xs)
lemma-28, rev (qrev xs []) = xs
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-45, (n = m) => (n`elem`insert2 m xs)
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 5
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 6
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 7
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 8
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 9
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 10
lemma-3, length (xs++xs) = double (length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 11
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-2, length (xs++ys) = (length ys+length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-0, double n = (n+n)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-9, rev (rev xs) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-0, double n = (n+n)
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))
lemma-27, revflat xs = qrevflat xs []
lemma-3, length (xs++xs) = double (length xs)
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
6 number of lemmas

------------------------------------
Cluster 1
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 2
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 3
lemma-12, half (n+n) = n
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
4 number of lemmas

------------------------------------
Cluster 4
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 5
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 6
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 7
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 8
lemma-45, (n = m) => (n`elem`insert2 m xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 9
lemma-2, length (xs++ys) = (length ys+length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 10
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 11
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 15
lemma-28, rev (qrev xs []) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-9, rev (rev xs) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-27, revflat xs = qrevflat xs []
lemma-28, rev (qrev xs []) = xs
lemma-3, length (xs++xs) = double (length xs)
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)
lemma-9, rev (rev xs) = xs

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 1
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 2
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 3
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 5
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 6
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 7
lemma-12, half (n+n) = n
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
4 number of lemmas

------------------------------------
Cluster 8
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 9
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 10
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 11
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 12
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-2, length (xs++ys) = (length ys+length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-0, double n = (n+n)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-45, (n = m) => (n`elem`insert2 m xs)

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-0, double n = (n+n)
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)
lemma-28, rev (qrev xs []) = xs
lemma-45, (n = m) => (n`elem`insert2 m xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 1
lemma-12, half (n+n) = n
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
4 number of lemmas

------------------------------------
Cluster 2
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 3
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 5
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 6
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 7
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 8
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 9
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 10
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 11
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 12
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-2, length (xs++ys) = (length ys+length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-9, rev (rev xs) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-3, length (xs++xs) = double (length xs)

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 1
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 2
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 3
lemma-12, half (n+n) = n
lemma-2, length (xs++ys) = (length ys+length xs)
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)
lemma-48, (n`elem`isort xs) => (n`elem`xs)
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 5
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 6
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 7
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 8
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 9
lemma-28, rev (qrev xs []) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 10
lemma-3, length (xs++xs) = double (length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 11
lemma-0, double n = (n+n)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 13
lemma-9, rev (rev xs) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-45, (n = m) => (n`elem`insert2 m xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 16
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 1
lemma-12, half (n+n) = n
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))
lemma-2, length (xs++ys) = (length ys+length xs)
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-45, (n = m) => (n`elem`insert2 m xs)
lemma-48, (n`elem`isort xs) => (n`elem`xs)
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 2
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 3
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 5
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 6
lemma-0, double n = (n+n)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 7
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 8
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 9
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 10
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 11
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-3, length (xs++xs) = double (length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 14
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-28, rev (qrev xs []) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-9, rev (rev xs) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-21, even (length (xs++ys)) = even (length (ys++xs))

Cluster summary: 
1 number of lemmas

####################################################################

connString:dbname='hipspec' host='localhost'
25 features are used...
------------------------------------
Cluster 0
lemma-21, even (length (xs++ys)) = even (length (ys++xs))
lemma-28, rev (qrev xs []) = xs
lemma-41, (n`elem`xs) => (n`elem`union2 xs ys)
lemma-45, (n = m) => (n`elem`insert2 m xs)
lemma-48, (n`elem`isort xs) => (n`elem`xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 1
lemma-15, even (n+n)
lemma-16, rev (rev (xs++ys)) = (rev (rev xs)++rev (rev ys))
lemma-17, rev (rev xs++ys) = (rev ys++xs)
lemma-37, (n`elem`xs) => ((n`elem`ys) => (n`elem`(xs++ys)))
lemma-42, (n`elem`xs) => (n`elem`union2 ys xs)

Cluster summary: 
5 number of lemmas

------------------------------------
Cluster 2
lemma-12, half (n+n) = n
lemma-38, (n`elem`drop m xs) => (n`elem`xs)
lemma-39, subset2 xs ys => (union2 xs ys = ys)
lemma-49, count n (isort xs) = count n xs

Cluster summary: 
4 number of lemmas

------------------------------------
Cluster 3
lemma-1, length (xs++ys) = length (ys++xs)
lemma-22, half (length (xs++ys)) = half (length (ys++xs))
lemma-23, even (n+m) = even (m+n)
lemma-24, even (length (xs++ys)) = even (length ys+length xs)
lemma-26, rev xs = qrev xs []
lemma-30, qrev (qrev xs []) [] = xs
lemma-32, fac n = qfac n b
lemma-33, (n*m) = mult2 n m Z

Cluster summary: 
8 number of lemmas

------------------------------------
Cluster 4
lemma-47, length (isort xs) = length xs
lemma-7, drop n (drop m xs) = drop m (drop n xs)

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 5
lemma-29, rev (rev xs++[]) = xs
lemma-44, n`elem`insert2 n xs

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 6
lemma-10, rev (rev xs++rev ys) = (ys++xs)
lemma-11, qrev xs ys = (rev xs++ys)
lemma-25, half (n+m) = half (m+n)
lemma-34, exp n m = qexp n m b
lemma-35, (n`elem`xs) => (n`elem`(xs++ys))
lemma-4, length (rev xs) = length xs
lemma-43, (n`elem`xs) => ((n`elem`ys) => (n`elem`intersect2 xs ys))
lemma-6, length (qrev xs ys) = (length xs+length ys)
lemma-8, drop o (drop n (drop m xs)) = drop m (drop n (drop o xs))

Cluster summary: 
9 number of lemmas

------------------------------------
Cluster 7
lemma-20, rotate (length xs) (xs++ys) = (ys++xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 8
lemma-14, (n+S n) = S (n+n)
lemma-19, even (length (xs++xs))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 9
lemma-31, rotate (length xs) xs = xs
lemma-36, (n`elem`ys) => (n`elem`(xs++ys))

Cluster summary: 
2 number of lemmas

------------------------------------
Cluster 10
lemma-18, (rev (rev xs)++ys) = rev (rev (xs++ys))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 11
lemma-46, unequal n m => ((n`elem`insert2 m xs) = (n`elem`xs))

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 12
lemma-13, sorted (isort xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 13
lemma-0, double n = (n+n)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 14
lemma-40, subset2 xs ys => (intersect2 xs ys = xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 15
lemma-27, revflat xs = qrevflat xs []

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 16
lemma-5, length (rev (xs++ys)) = (length xs+length ys)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 17
lemma-3, length (xs++xs) = double (length xs)

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 18
lemma-9, rev (rev xs) = xs

Cluster summary: 
1 number of lemmas

------------------------------------
Cluster 19
lemma-2, length (xs++ys) = (length ys+length xs)

Cluster summary: 
1 number of lemmas

